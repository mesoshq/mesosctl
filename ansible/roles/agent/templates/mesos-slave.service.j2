[Unit]
Description=Mesos Slave
After=mesos-master.service
Requires=docker.service

[Service]
Restart=on-failure
RestartSec=20
TimeoutStartSec=0
Environment=LIBPROCESS_IP={{ ansible_ssh_host }}
ExecStartPre=-/usr/bin/docker kill mesos_slave
ExecStartPre=-/usr/bin/docker rm mesos_slave
ExecStartPre=/usr/bin/docker pull {{ registry_config.hostname }}:{{ registry_config.port }}/{{ docker.images.agent | basename }}
ExecStart=/usr/bin/sh -c "/usr/bin/docker run \
    --name=mesos_slave \
    --net=host \
    --privileged \
    -v /var/tmp/mesos/slave:/var/tmp/mesos \
    -v /var/log/mesos/slave:/var/log/mesos \
    -v /sys/fs/cgroup/:/cgroup \
    -v /sys:/sys \
    -v /usr/bin/docker:/usr/bin/docker:ro \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v /lib64/libdevmapper.so.1.02:/lib/libdevmapper.so.1.02:ro \
    -v /lib64/libsystemd.so.0:/lib/libsystemd.so.0:ro \
    -v /lib64/libgcrypt.so.20:/lib/libgcrypt.so.20:ro \
    -p 5051:5051 \
    -e MESOS_IP={{ ansible_ssh_host }} \
    -e MESOS_HOSTNAME={{ ansible_ssh_host }} \
    -e MESOS_CONTAINERIZERS={{ mesos_containerizers }} \
    -e MESOS_MASTER={{ zookeeper.mesos_connection }} \
    -e MESOS_SWITCH_USER=0 \
    -e MESOS_LOG_DIR=/var/log/mesos \
    -e MESOS_WORK_DIR=/var/tmp/mesos \
    -e MESOS_EXECUTOR_REGISTRATION_TIMEOUT={{ mesos_executor_timeout }} \
    {{ registry_config.hostname }}:{{ registry_config.port }}/{{ docker.images.agent | basename }} \
    --executor_shutdown_grace_period={{ executor_shutdown_grace_period }} \
    --docker_stop_timeout={{ docker_stop_timeout }}"
ExecStop=/usr/bin/docker stop mesos_slave

[Install]
WantedBy=multi-user.target
